name: Deploy Secrets
on: 
    workflow_dispatch:
        inputs:
            Universe:
                description: 'Universe to deploy'
                default: 'ci'
                type: choice
                options: [ci, cert, anon, uat, bazaar]
                required: true
            # ApiKey:
            #     description: 'API Key value'
            #     type: string
            #     required: true
            # AccessToken:
            #     description: 'Access Token value'
            #     type: string
            #     required: true
            AWS_REGION:
                description: 'AWS region to deploy'
                default: 'us-east-1'
                type: choice
                options: [us-east-1]

permissions:
    id-token: write
    contents: read
    actions: read
                  
jobs:
  deploy-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v3

      - name: Checkout repository with Library.py
        uses: actions/checkout@v3
        with:
          repository: kpnssreeram/Library
          path: external-scripts

      

      - name: Fetch data (deploy label)
        run: |
            label=$(python ./B.py getDeployLabelByUniverse "ci")
            echo "Deploy Label: $label"
        

      - name: Install jq
        run: |
              sudo apt-get update
              sudo apt-get install jq
    
      - name: Mask ApiKey and AccessToken
        run: |
            API_PASSWORD=$(jq -r '.inputs.ApiKey' $GITHUB_EVENT_PATH)
            ACCESS_TOKEN=$(jq -r '.inputs.AccessToken' $GITHUB_EVENT_PATH)
            echo ::add-mask::$API_PASSWORD
            echo ::add-mask::$ACCESS_TOKEN
            echo "API_PASSWORD=$API_PASSWORD" >> $GITHUB_ENV
            echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            role-to-assume: arn:aws:iam::${{ env[format('aws_environment_{0}', env.ENVNAME)] }}:role/emojigitrole
            role-session-name: emojiSecretsSession
            aws-region: ${{ inputs.AWS_REGION }}