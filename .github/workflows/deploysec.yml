name: Deploy Secrets

on:
  workflow_call:
    inputs:
      Universe:
        required: true
        type: string

      aws_environment:
        required: true
        type: string

      ApiKey:
        description: 'API Key value'
        type: string
        required: false

      AccessToken:
        description: 'Access Token value'
        type: string
        required: false


env:
  AWS_REGION: us-east-1
  TEAM: emodb-dev@bazaarvoice.com
  DATATYPE: client+personal

jobs:
  deploy-secrets:
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Import Environment Variables
        uses: cardinalby/export-env-action@v2
        with:
          envFile: 'Environments.env'
          expand: 'true'

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install jq

      - name: Mask ApiKey
        run: |
          API_PASSWORD=$(jq -r '.inputs.ApiKey' $GITHUB_EVENT_PATH)
          echo ::add-mask::$API_PASSWORD
          echo "API_PASSWORD=$API_PASSWORD" >> $GITHUB_ENV

      - name: Mask AccessToken
        run: |
          Access_Token=$(jq -r '.inputs.AccessToken' $GITHUB_EVENT_PATH)
          echo ::add-mask::$Access_Token
          echo "Access_Token=$Access_Token" >> $GITHUB_ENV

      - name: Setup Environment Variables
        run: |
          if [ "${{ inputs.aws_environment }}" == "qa" ]; then
            echo "AWSCRED=${{ secrets.AWS_ENVIRONMENT_QA }}" >> $GITHUB_ENV
          else
            echo "AWSCRED=${{ secrets.AWS_ENVIRONMENT_PROD }}" >> $GITHUB_ENV
          fi

          if [ "${{ inputs.Universe }}" == "ci" ]; then
            echo "STACK_NAME=${{ secrets.STACK_NAME_CI }}" >> $GITHUB_ENV
          else
            echo "STACK_NAME=${{ secrets.STACK_NAME_QA }}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Deploy Secrets
        run: |
          cd ops/cfn
          aws cloudformation deploy \
            --stack-name ${{ env.STACK_NAME }} \
            --template-file secrets.cfn.yml \
            --region ${{ env.AWS_REGION }} \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              Universe=${{ inputs.Universe }} \
              AccessToken=${{ env.Access_Token }} \
              ApiKey=${{ env.API_PASSWORD }} \
            --tags \
              bv:nexus:team=${{ env.TEAM }} \
              bv:nexus:vpc=1233 \
              bv:system=emodb \
              bv:nexus:service=${{ vars.SERVICE }} \
              bv:nexus:owner=${{ env.TEAM }} \
              bv:nexus:costcenter=${{ env.TEAM }} \
              bv:nexus:datatype=${{ env.DATATYPE }} \
              bv:nexus:env=1234