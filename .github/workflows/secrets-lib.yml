name: Deploy Secrets
on:
  workflow_call:
    inputs:
      Universe:
        required: true
        type: string

      ApiKey:
        description: 'API Key value'
        type: string
        required: false

      AccessToken:
        description: 'Access Token value'
        type: string
        required: false

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  deploy-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Import Environment File
        run: |
          if [ "${{ inputs.Universe }}" == "ci" ]||[ "${{ inputs.Universe }}" == "cert" ]||[ "${{ inputs.Universe }}" == "anon" ]; then
              echo "ENVFILE=Environments.env" >> $GITHUB_ENV
              echo "ENVNAME=qa">>$GITHUB_ENV
            else
              echo "ENVFILE=ProdEnvironments.env" >> $GITHUB_ENV
              echo "ENVNAME=prod">>$GITHUB_ENV
            fi

      - name: Import Environment Variables
        uses: cardinalby/export-env-action@v2
        with:
          envFile: '${{env.ENVFILE}}'
          expand: 'true'

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install jq

      - name: Mask ApiKey and AccessToken
        run: |
          API_PASSWORD=$(jq -r '.inputs.ApiKey' $GITHUB_EVENT_PATH)
          ACCESS_TOKEN=$(jq -r '.inputs.AccessToken' $GITHUB_EVENT_PATH)
          echo ::add-mask::$API_PASSWORD
          echo ::add-mask::$ACCESS_TOKEN
          echo "API_PASSWORD=$API_PASSWORD" >> $GITHUB_ENV
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV
  
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env[format('AWS_ENVIRONMENT_{0}', env.ENVNAME)] }}:role/emojigitrole
          role-session-name: emojiSession
          aws-region: ${{ env.AWS_REGION }}
  
      - name: Deploy Secrets
        run: |
          aws cloudformation deploy \
            --stack-name ${{inputs.Universe }}-emoji-test \
            --template-file cd ops/cfn/secrets.cfn.yml \
            --region ${{ env.AWS_REGION }} \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              Universe=${{ inputs.Universe }} \
              AccessToken=${{ env.Access_Token }} \
              ApiKey=${{ env.API_PASSWORD }} \
            --tags \
              bv:nexus:team=${{ env.TEAM }} \
              bv:nexus:vpc=${{ env.ENVNAME }}  \
              bv:system=emodb \
              bv:nexus:service=${{env.SERVICE }} \
              bv:nexus:owner=${{ env.TEAM }} \
              bv:nexus:costcenter=${{ env.TEAM }} \
              bv:nexus:datatype=${{ env.DATATYPE }} \
              bv:nexus:env=${{ env.ENVNAME }} \
