name: Deploy emoji service
on: 
    workflow_dispatch:
        inputs:
            Universe:
                description: 'Universe to deploy'
                default: 'ci'
                type: choice
                options: [ci, cert, anon, uat, bazaar]
                required: true
            Version:
                required: true
                default: 'latest'
                description: 'Emoji Docker Image Tag'
                type: string
            DnsSuffix:
                required: false
                default: ''
                description: 'Use for testing purposes. Leave blank for real universes'
                type: string
            AWS_REGION:
                description: 'AWS region to deploy'
                default: 'us-east-1'
                type: choice
                options: [us-east-1]

permissions:
    id-token: write
    contents: read
    actions: read
                  
jobs:
  deploy-emoji-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v3

    #   - name: Checkout repository with library file
    #     uses: actions/checkout@v3
    #     with:
    #       repository: kpnssreeram/Library
    #       path: libscript

      - name: Fetch data 
        run: |
            label=$(python ./EmojiLib.py getVpcByUniverse "${{inputs.Universe}}")
            account_id=$(python ./EmojiLib.py getAccountIdByUniverse "${{inputs.Universe}}")
            echo "EnvTag=$label" >> $GITHUB_ENV
            echo "AccId=$account_id" >> $GITHUB_ENV
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            role-to-assume: arn:aws:iam::${{env.AccId}}:role/emojigitrole
            role-session-name: emojiServiceSession
            aws-region: ${{ inputs.AWS_REGION }}

      - name: Deploying emoji service
        run: |
            export AWS_RETRY_MODE="standard"
            export AWS_MAX_ATTEMPTS=15

            if [ "${{inputs.Version}}" == "latest" ]; then
                Version=$(git tag -l | grep emoji | cut -d'-' -f2 | sort -V | tail -1)
            fi

            aws cloudformation deploy                                                                                         \
                --stack-name "${{ inputs.Universe }}-emoji-app${{ inputs.DnsSuffix }}"                                        \
                --template-file ops/cfn/service.cfn.yml                                                                       \
                --parameter-overrides                                                                                         \
                    Universe=${{ inputs.Universe }}                                                                           \
                    Image="549050352176.dkr.ecr.us-east-1.amazonaws.com/emodb/emoji: ${{ inputs.Version }}"                   \
                    InternalTargetGroup=${{ inputs.Universe }}${{ inputs.DnsSuffix }}-emoji-internal-alb:InternalTargetGroup  \
                    DesiredContainerCount=1                                                                                   \
                --capabilities CAPABILITY_IAM                                                                              \
                --no-fail-on-empty-changeset                                                                               \
                --tags                                                                                                     \
                    bv:nexus:team=$(python ./EmojiLib.py getTags "team")                                                   \
                    bv:nexus:vpc=${{env.EnvTag}}                                                                           \
                    bv:system=emodb                                                                                        \
                    bv:nexus:service=$(python ./EmojiLib.py getTags "service")                                             \
                    bv:nexus:role=app                                                                                      \
                    bv:nexus:owner=$(python ./EmojiLib.py getTags "team")                                                  \
                    bv:nexus:access=none                                                                                   \
                    bv:nexus:costcenter=$(python ./EmojiLib.py getTags "team")                                             \
                    bv:nexus:datatype=$(python ./EmojiLib.py getTags "datatype")                                           \
                    bv:nexus:env="${{env.EnvTag}}      "                                                                   \
                    universe="${{ inputs.Universe }}"                                                                      \
                --region ${{ inputs.AWS_REGION }}

      - name: Alert to slack
        uses: 8398a7/action-slack@v3
        if: ${{ always() }}
        with:
          status: ${{ job.status }}
          fields: repo,message,job,workflow
          author_name: The workflow at ${{ github.repository }} on branch ${{ github.ref_name }} is ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}