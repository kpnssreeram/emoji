name: Deploy Spark Secrets
on: 
    workflow_dispatch:
        inputs:
            Universe:
                description: 'Universe to deploy'
                default: 'ci'
                type: choice
                options: [ci, cert, anon, uat, bazaar]
                required: true
            ApiKey:
                description: 'Value of apikey secret'
                type: string
                required: true
            AWS_REGION:
                description: 'AWS region to deploy'
                default: 'us-east-1'
                type: choice
                options: [us-east-1]

permissions:
    id-token: write
    contents: read
    actions: read
                  
jobs:
  deploy-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v3

      - name: Checkout repository with library file
        uses: actions/checkout@v3
        with:
          repository: bvengineering/ActionsLibraryHub
          path: LibraryHub

      - name: Fetch data
        run: |
            label=$(python ./LibraryHub/EmodbLib.py getVpcByUniverse "${{inputs.Universe}}")
            account_id=$(python ./LibraryHub/EmodbLib.py getAccountIdByUniverse "${{inputs.Universe}}")
            echo "EnvTag=$label" >> $GITHUB_ENV
            echo "AccId=$account_id" >> $GITHUB_ENV

      - name: Install jq
        run: |
              sudo apt-get update
              sudo apt-get install jq
    
      - name: Mask ApiKey
        run: |
            API_PASSWORD=$(jq -r '.inputs.ApiKey' $GITHUB_EVENT_PATH)
            echo "API_PASSWORD=$API_PASSWORD" >> $GITHUB_ENV
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            role-to-assume: arn:aws:iam::${{env.AccId}}:role/deployCFNResource
            role-session-name: emojiSecretsSession
            aws-region: ${{ inputs.AWS_REGION }}

      - name: Deploy Secrets
        run: |
            aws cloudformation deploy                                                     \
            --stack-name ${{env.EnvTag}}-spark-secrets                                    \
            --template-file ops/spark-secrets.yml                                         \
            --region ${{inputs.AWS_REGION}}                                               \
            --capabilities CAPABILITY_IAM                                                 \
            --parameter-overrides                                                         \
                Environment=${{env.EnvTag}}                                               \
            --tags                                                                        \
                bv:nexus:team=$(python ./LibraryHub/EmodbLib.py getTags "team")           \
                bv:nexus:vpc=${{env.EnvTag}}                                              \
                bv:system=emodb                                                           \
                bv:nexus:service=emodb                                                    \
                bv:nexus:role=spark-generator-lambda                                      \
                bv:nexus:owner=$(python ./LibraryHub/EmodbLib.py getTags "team")          \
                bv:nexus:costcenter=$(python ./LibraryHub/EmodbLib.py getTags "team")     \
                bv:nexus:datatype=$(python ./LibraryHub/EmodbLib.py getTags "datatype")   \
                bv:nexus:env=${{env.EnvTag}}  
          

      - name: Alert to slack
        uses: 8398a7/action-slack@v3
        if: ${{ always() }}
        with:
          status: ${{ job.status }}
          fields: repo,message,job,workflow
          author_name: The workflow at ${{ github.repository }} on branch ${{ github.ref_name }} is ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}